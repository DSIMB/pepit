pdb=surf_annotate(pdb, chains=NULL)
pdb.surf=get_binding_sites(pdb1, target_chains="A", ligand_chains="B", add="calpha", add.ligand=TRUE, surface=FALSE)
ind=which(pdb$atom$b>10)
inds=add_carbons(pdb, ind, add="calpha")
pdb1=bio3d::trim.pdb(pdb, inds=inds)
pdb.surf=get_binding_sites(pdb1, target_chains="A", ligand_chains="B", add="calpha", add.ligand=TRUE, surface=FALSE)
target=bio3d::trim.pdb(pdb1, chain="A")
bs=bio3d::trim.pdb(pdb.surf, chain="A")
X=target$atom[,c("x","y","z")]
Y=bs$atom[,c("x","y","z")]
XProp=target$atom$elesy
YProp=bs$atom$elesy
cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))
devtools::document()
roxygen2::roxygenise()
devtools::check()
roxygen2::roxygenise()
target=bio3d::trim.pdb(pdb1, chain="A")
bs=bio3d::trim.pdb(pdb.surf, chain="A")
X=target$atom[,c("x","y","z")]
Y=bs$atom[,c("x","y","z")]
XProp=target$atom$elesy
YProp=bs$atom$elesy
cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))
library(pepit)
target=bio3d::trim.pdb(pdb1, chain="A")
bs=bio3d::trim.pdb(pdb.surf, chain="A")
X=target$atom[,c("x","y","z")]
Y=bs$atom[,c("x","y","z")]
XProp=target$atom$elesy
YProp=bs$atom$elesy
cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))
library(pepit)
target=bio3d::trim.pdb(pdb1, chain="A")
bs=bio3d::trim.pdb(pdb.surf, chain="A")
X=target$atom[,c("x","y","z")]
Y=bs$atom[,c("x","y","z")]
XProp=target$atom$elesy
YProp=bs$atom$elesy
cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))
library(pepit)
library(pepit)
target=bio3d::trim.pdb(pdb1, chain="A")
bs=bio3d::trim.pdb(pdb.surf, chain="A")
X=target$atom[,c("x","y","z")]
Y=bs$atom[,c("x","y","z")]
XProp=target$atom$elesy
YProp=bs$atom$elesy
cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))
library(pepit)
dim(X)
dim(Y)
target=bio3d::trim.pdb(pdb1, chain="A")
bs=bio3d::trim.pdb(pdb.surf, chain="A")
X=target$atom[,c("x","y","z")]
Y=bs$atom[,c("x","y","z")]
XProp=target$atom$elesy
YProp=bs$atom$elesy
cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))
dim(YProp)
length(YProp)
YProp
library(pepit)
target=bio3d::trim.pdb(pdb1, chain="A")
bs=bio3d::trim.pdb(pdb.surf, chain="A")
X=target$atom[,c("x","y","z")]
Y=bs$atom[,c("x","y","z")]
XProp=target$atom$elesy
YProp=bs$atom$elesy
cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))
typeof(X)
X=as.matrix(X)
Y=as.matrix(Y)
typeof(YProp)
target=bio3d::trim.pdb(pdb1, chain="A")
bs=bio3d::trim.pdb(pdb.surf, chain="A")
X=target$atom[,c("x","y","z")]
Y=bs$atom[,c("x","y","z")]
XProp=target$atom$elesy
YProp=bs$atom$elesy
cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))
typeof(X)
X=as.matrix(X)
typeof(X)
Y=as.matrix(Y)
typeof(Y)
target=bio3d::trim.pdb(pdb1, chain="A")
bs=bio3d::trim.pdb(pdb.surf, chain="A")
X=target$atom[,c("x","y","z")]
Y=bs$atom[,c("x","y","z")]
XProp=target$atom$elesy
YProp=bs$atom$elesy
cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))
X=as.matrix(X)
Y=as.matrix(Y)
cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))
library(pepit)
X=target$atom[,c("x","y","z")]
X=as.matrix(X)
Y=bs$atom[,c("x","y","z")]
Y=as.matrix(Y)
XProp=target$atom$elesy
YProp=bs$atom$elesy
cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))
library(pepit)
X=target$atom[,c("x","y","z")]
X=as.matrix(X)
Y=bs$atom[,c("x","y","z")]
Y=as.matrix(Y)
XProp=target$atom$elesy
YProp=bs$atom$elesy
cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))
library(pepit)
X=target$atom[,c("x","y","z")]
X=as.matrix(X)
Y=bs$atom[,c("x","y","z")]
Y=as.matrix(Y)
XProp=target$atom$elesy
YProp=bs$atom$elesy
cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))
library(pepit)
X=target$atom[,c("x","y","z")]
X=as.matrix(X)
Y=bs$atom[,c("x","y","z")]
Y=as.matrix(Y)
XProp=target$atom$elesy
YProp=bs$atom$elesy
cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))
library(pepit)
X=target$atom[,c("x","y","z")]
X=as.matrix(X)
Y=bs$atom[,c("x","y","z")]
Y=as.matrix(Y)
XProp=target$atom$elesy
YProp=bs$atom$elesy
cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))
library(pepit)
X=target$atom[,c("x","y","z")]
X=as.matrix(X)
Y=bs$atom[,c("x","y","z")]
Y=as.matrix(Y)
XProp=target$atom$elesy
YProp=bs$atom$elesy
cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))
library(pepit)
X=target$atom[,c("x","y","z")]
X=as.matrix(X)
Y=bs$atom[,c("x","y","z")]
Y=as.matrix(Y)
XProp=target$atom$elesy
YProp=bs$atom$elesy
cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))
library(pepit)
X=target$atom[,c("x","y","z")]
X=as.matrix(X)
Y=bs$atom[,c("x","y","z")]
Y=as.matrix(Y)
XProp=target$atom$elesy
YProp=bs$atom$elesy
cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))
library(pepit)
X=target$atom[,c("x","y","z")]
X=as.matrix(X)
Y=bs$atom[,c("x","y","z")]
Y=as.matrix(Y)
XProp=target$atom$elesy
YProp=bs$atom$elesy
cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))
mapping
help(atom.select)
library(bio3d)
help(atom.select)
devtools::document()
library(pepit)
44+160+58+216+56+208+242
library(bio3d)
pdb=read.pdb("2pdz")
pdb=trim.pdb(pdb, string="protein")
pdb=type_atoms(pdb)
target=access_atoms(pdb, chains="A", add="calpha", surface=FALSE)
bs=get_binding_sites(target, target_chains="A", ligand_chains="B", add="calpha", add.ligand=TRUE, surface=10)
target=surface_atoms(target,chain="A",surface=10)
target=surface_atoms(target,chain="A",minacc=10)
unique(target$atom$chain)
library(pepit)
pdb=read.pdb("2pdz")
pdb=trim.pdb(pdb, string="protein")
pdb=type_atoms(pdb)
target=access_atoms(pdb, chains="A", add="calpha", surface=FALSE)
bs=get_binding_sites(target, target_chains="A", ligand_chains="B", add="calpha", add.ligand=TRUE, surface=10)
target=surface_atoms(target,minacc=10)
target
X=target$atom[,c("x","y","z")]
X=as.matrix(X)
Y=bs$atom[,c("x","y","z")]
Y=as.matrix(Y)
XProp=target$atom$elesy
YProp=bs$atom$elesy
dim(X)
dim(Y)
result=cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))
bio3d::rmsd(as.vector(t(X[result[[1]]$I,])),as.vector(t(Y[result[[1]]$J,])),fit=TRUE)
BCscore(X[result[[1]]$I,],Y[result[[1]]$J,])
bio3d::rmsd(as.vector(t(X[result[[2]]$I,])),as.vector(t(Y[result[[2]]$J,])),fit=TRUE)
bio3d::rmsd(as.vector(t(X[result[[3]]$I,])),as.vector(t(Y[result[[3]]$J,])),fit=TRUE)
bio3d::rmsd(as.vector(t(X[result[[4]]$I,])),as.vector(t(Y[result[[4]]$J,])),fit=TRUE)
bio3d::rmsd(as.vector(t(X[result[[5]]$I,])),as.vector(t(Y[result[[5]]$J,])),fit=TRUE)
result
bs
dim(Y)
YProp
length(YProp!="H")
sum(YProp!="H")
bs$atom$chain
sum(bs$atom$chain=="A")
result
bs$atom$elesy
bs$atom$chain
library(pepit)
bs$atom$chain
bs=bio3d::trim.pdb(bs,chain="A")
X=target$atom[,c("x","y","z")]
X=as.matrix(X)
Y=bs$atom[,c("x","y","z")]
Y=as.matrix(Y)
XProp=target$atom$elesy
YProp=bs$atom$elesy
result=cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))
result
bio3d::rmsd(as.vector(t(X[result[[1]]$I,])),as.vector(t(Y[result[[1]]$J,])),fit=TRUE)
bs
XProp[result[[1]]$I,]
YProp[result[[1]]$J,]
XProp[result[[1]]$I]
YProp[result[[1]]$J]
XProp[result[[2]]$I]
YProp[result[[2]]$J]
target$atom
target
bs$atom
pdb=read.pdb("2pdz")
pdb=trim.pdb(pdb, string="protein")
pdb=type_atoms(pdb)
target=access_atoms(pdb, chains="A", add="calpha", surface=FALSE)
bs=get_binding_sites(target, target_chains="A", ligand_chains="B", add="calpha", add.ligand=TRUE, surface=10)
target=surface_atoms(target,minacc=10)
bs=bio3d::trim.pdb(bs,chain="A")
X=target$atom[,c("x","y","z")]
X=as.matrix(X)
Y=bs$atom[,c("x","y","z")]
Y=as.matrix(Y)
XProp=target$atom$elesy
YProp=bs$atom$elesy
result=cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))
result[[1]]$I
result[[1]]$J
XProp[result[[1]]$I,]
YProp[result[[1]]$J,]
bio3d::rmsd(as.vector(t(X[result[[1]]$I,])),as.vector(t(Y[result[[1]]$J,])),fit=TRUE)
XProp[result[[1]]$I]
YProp[result[[1]]$J]
bs$atom
library(pepit)
target=access_atoms(pdb, chains="A", add="calpha", surface=FALSE)
bs=get_binding_sites(target, target_chains="A", ligand_chains="B", add="calpha", add.ligand=TRUE, surface=10)
target=surface_atoms(target,minacc=10)
bs=bio3d::trim.pdb(bs,chain="A")
bs
target
target=access_atoms(pdb, chains="A", add="calpha", surface=FALSE)
bs=get_binding_sites(target, target_chains="A", ligand_chains="B", add="calpha", add.ligand=TRUE, surface=10)
library(pepit)
target=access_atoms(pdb, chains="A", add="calpha", surface=FALSE)
bs=get_binding_sites(target, target_chains="A", ligand_chains="B", add="calpha", add.ligand=TRUE, surface=10)
target=surface_atoms(target,minacc=10)
bs=bio3d::trim.pdb(bs,chain="A")
bs$atom
X=target$atom[,c("x","y","z")]
X=as.matrix(X)
Y=bs$atom[,c("x","y","z")]
Y=as.matrix(Y)
XProp=target$atom$elesy
YProp=bs$atom$elesy
result=cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))
result[[1]]$I
result[[1]]$J
XProp[result[[1]]$I]
YProp[result[[1]]$J]
bio3d::rmsd(as.vector(t(X[result[[1]]$I,])),as.vector(t(Y[result[[1]]$J,])),fit=TRUE)
length(XProp[result[[1]]$I])
bs
bs$atom
dim(bs$atom)
dim(Y)
dim(X)
library(pepit)
pdb=read.pdb("2pdz")
pdb=trim.pdb(pdb, string="protein")
pdb=type_atoms(pdb)
target=access_atoms(pdb, chains="A", add="calpha", surface=FALSE)
bs=get_binding_sites(target, target_chains="A", ligand_chains="B", add="calpha", add.ligand=TRUE, surface=10)
target=surface_atoms(target,minacc=1)
bs=bio3d::trim.pdb(bs,chain="A")
X=target$atom[,c("x","y","z")]
X=as.matrix(X)
Y=bs$atom[,c("x","y","z")]
Y=as.matrix(Y)
XProp=target$atom$elesy
YProp=bs$atom$elesy
result=cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))
result[[1]]$I
result[[1]]$J
XProp[result[[1]]$I]
YProp[result[[1]]$J]
bio3d::rmsd(as.vector(t(X[result[[1]]$I,])),as.vector(t(Y[result[[1]]$J,])),fit=TRUE)
length(result[[1]]$I)
result
library(pepit)
pdb=read.pdb("2pdz")
pdb=trim.pdb(pdb, string="protein")
pdb=type_atoms(pdb)
target=access_atoms(pdb, chains="A", add="calpha", surface=FALSE)
bs=get_binding_sites(target, target_chains="A", ligand_chains="B", add="calpha", add.ligand=TRUE, surface=10)
target=surface_atoms(target,minacc=1)
bs=bio3d::trim.pdb(bs,chain="A")
X=target$atom[,c("x","y","z")]
X=as.matrix(X)
Y=bs$atom[,c("x","y","z")]
Y=as.matrix(Y)
XProp=target$atom$elesy
YProp=bs$atom$elesy
result=cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))
result[[1]]$I
result[[1]]$J
XProp[result[[1]]$I]
YProp[result[[1]]$J]
bio3d::rmsd(as.vector(t(X[result[[1]]$I,])),as.vector(t(Y[result[[1]]$J,])),fit=TRUE)
length(result[[1]]$I)
result
bs$atom
sum(bs$atom$b>=10)
sum(target$atom$b>=10)
target$atom$b
sum(target$atom$b>=0)
bs$atom$elesy
result=cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=25.0, types=c("a"))
result[[1]]$I
result[[1]]$J
length(result[[1]]$I)
XProp[result[[1]]$I]
YProp[result[[1]]$J]
bio3d::rmsd(as.vector(t(X[result[[1]]$I,])),as.vector(t(Y[result[[1]]$J,])),fit=TRUE)
# devtools::document()
# in NAMESPACE:
# useDynLib(pepit)
# importFrom(Rcpp, evalCpp)
# 2pdzA:B
library(pepit)
library(bio3d)
pdb=read.pdb("2pdz")
pdb=trim.pdb(pdb, string="protein")
pdb=trim.pdb(pdb, string="noh")
pdb=type_atoms(pdb)
target=access_atoms(pdb, chains="A", add="calpha", surface=FALSE)
bs=get_binding_sites(target, target_chains="A", ligand_chains="B", add="calpha", add.ligand=TRUE, surface=10)
target=surface_atoms(target,minacc=10)
bs=bio3d::trim.pdb(bs,chain="A")
X=target$atom[,c("x","y","z")]
X=as.matrix(X)
Y=bs$atom[,c("x","y","z")]
Y=as.matrix(Y)
XProp=target$atom$elesy
YProp=bs$atom$elesy
result=cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=25.0, types=c("a"))#si maxdist=15, pas tout
result[[1]]$I
result[[1]]$J
length(result[[1]]$I)
XProp[result[[1]]$I]
YProp[result[[1]]$J]
bio3d::rmsd(as.vector(t(X[result[[1]]$I,])),as.vector(t(Y[result[[1]]$J,])),fit=TRUE)
bs
library(pepit)
result=cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=25.0, types=c("a"))#si maxdist=15, pas tout
result
library(pepit)
result=cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=25.0, types=c("a"))#si maxdist=15, pas tout
result
I=result$cliques[[1]]$I
J=result$cliques[[1]]$J
length(I)
XProp[I]
YProp[J]
bio3d::rmsd(as.vector(t(X[I,])),as.vector(t(Y[J,])),fit=TRUE)
help(aa321)
devtools::document()
library(pepit)
result=cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=25.0, types=c("a"))#si maxdist=15, pas tout
library(pepit)
result=cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=25.0, types=c("a"))#si maxdist=15, pas tout
result
mapping=get_mapping(result, nrow(X))
library(pepit)
mapping=get_mapping(result, nrow(X))
library(pepit)
mapping=get_mapping(result, nrow(X))
mapping
mapping[[1]]$I
mapping[[1]]$J
I=mapping[[1]]$I
J=mapping[[1]]$J
length(I)
XProp[I]
YProp[J]
bio3d::rmsd(as.vector(t(X[I,])),as.vector(t(Y[J,])),fit=TRUE)
result
mapping_dist_sum2
result=extend_cliques(X, XProp, Y, YProp, result, deltadist=1.0)
library(pepit)
result=extend_cliques(X, XProp, Y, YProp, result, deltadist=1.0)
library(pepit)
result=extend_cliques(X, XProp, Y, YProp, result, deltadist=1.0)
library(pepit)
result=extend_cliques(X, XProp, Y, YProp, result, deltadist=1.0)
library(pepit)
result=extend_cliques(X, XProp, Y, YProp, result, deltadist=1.0)
devtools::document()
library(pepit)
result=extend_cliques(X, XProp, Y, YProp, result, deltadist=1.0)
library(pepit)
result=extend_cliques(X, XProp, Y, YProp, result, deltadist=1.0)
patchsearch_MAXDELTADIST
pdb=read.pdb("2pdz")
pdb=trim.pdb(pdb, string="protein")
pdb=trim.pdb(pdb, string="noh")
pdb=type_atoms(pdb)
target=access_atoms(pdb, chains="A", add="calpha", surface=FALSE)
bs=get_binding_sites(target, target_chains="A", ligand_chains="B", add="calpha", add.ligand=TRUE, surface=10)
target=surface_atoms(target,minacc=10)
bs=bio3d::trim.pdb(bs,chain="A")
X=target$atom[,c("x","y","z")]
X=as.matrix(X)
Y=bs$atom[,c("x","y","z")]
Y=as.matrix(Y)
XProp=target$atom$elesy
YProp=bs$atom$elesy
result=cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=25.0, types=c("a"))#si maxdist=15, pas tout
library(pepit)
result=cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=25.0, types=c("a"))#si maxdist=15, pas tout
mapping_dist_sum2
devtools::document()
library(pepit)
mapping_dist_sum2
result=cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=25.0, types=c("a"))
result=extend_cliques(X, XProp, Y, YProp, result, deltadist=1.0)
library(pepit)
result=extend_cliques(X, XProp, Y, YProp, result, deltadist=1.0)
library(pepit)
result=extend_cliques(X, XProp, Y, YProp, result, deltadist=1.0)
library(pepit)
result=extend_cliques(X, XProp, Y, YProp, result, deltadist=1.0)
W
ind
which.min(W)
ind=which.min(W)
ind
exit
quit
library(pepit)
result=extend_cliques(X, XProp, Y, YProp, result, deltadist=1.0)
library(pepit)
result=extend_cliques(X, XProp, Y, YProp, result, deltadist=1.0)
library(pepit)
result=extend_cliques(X, XProp, Y, YProp, result, deltadist=1.0)
result
mapping=get_mapping(result, nrow(X))
I=mapping[[1]]$I
J=mapping[[1]]$J
length(I)
XProp[I]
YProp[J]
bio3d::rmsd(as.vector(t(X[I,])),as.vector(t(Y[J,])),fit=TRUE)
pdb2=read.pdb("1g3j")
pdb2=type_atoms(pdb2)
target2=access_atoms(pdb2, chains="A", add="calpha", surface=FALSE)
target2=surface_atoms(target2,minacc=10)
X=target$atom[,c("x","y","z")]
X=as.matrix(X)
XProp=target2$atom$elesy
result=cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=25.0, types=c("a"))#si maxdist=15, pas tout
result=cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))#si maxdist=15, pas tout
pdb2
pdb2=bio3d::trim.pdb(pdb2,chain="A")
pdb2=type_atoms(pdb2)
target2=access_atoms(pdb2, chains="A", add="calpha", surface=FALSE)
target2=surface_atoms(target2,minacc=10)
X=target$atom[,c("x","y","z")]
X=as.matrix(X)
XProp=target2$atom$elesy
result=cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))#si maxdist=15, pas tout
X=target2$atom[,c("x","y","z")]
X=as.matrix(X)
XProp=target2$atom$elesy
result=cliques(X, XProp, Y, YProp, deltadist=1.0, mindist=0.0, maxdist=15.0, types=c("a"))#si maxdist=15, pas tout
mapping=get_mapping(result, nrow(X))
I=mapping[[1]]$I
J=mapping[[1]]$J
length(I)
XProp[I]
YProp[J]
bio3d::rmsd(as.vector(t(X[I,])),as.vector(t(Y[J,])),fit=TRUE)
library(vanddraabe)
help(FreeSASA.diff)
